name: Build and Publish Wheels

on:
  push:
    branches:
      - feature/wheel-build

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine pybind11>=2.0 numpy>=1.10.0
          pip install . 

      - name: Build wheels
        run: |
          python setup.py sdist bdist_wheel
          pip wheel . -w dist/
          

      - name: Build and install
        run: python -m pip install .

      - name: Test
        timeout-minutes: 15
        run: |
          python -m unittest discover -v --start-directory examples/python --pattern "example*.py"
          python -m unittest discover -v --start-directory tests/python --pattern "bindings_test*.py"

      - name: Save wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist/*.whl
#
#  publish:
#    needs: build
#    runs-on: ubuntu-latest
#    steps:
#      - name: Download wheels
#        uses: actions/download-artifact@v2
#        with:
#          name: wheels
#          path: dist/
#
#      - name: Publish to PyPI
#        run: |
#          pip install twine
#          twine upload dist/*.whl dist/*.tar.gz
#        env:
#          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
